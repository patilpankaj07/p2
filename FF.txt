import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
import matplotlib.pyplot as plt

mnist=tf.keras.datasets.cifar10
(x_train,y_train),(x_test,y_test)=mnist.load_data()
x_train=x_train/255
x_test=x_test/255
sp=x_train[0]
sp.shape

model=Sequential([
    Flatten(input_shape=(32,32,3)),
    Dense(128,activation="relu"),
    Dense(10,activation="softmax")
    ])
model.summary()

model.compile(optimizer="sgd",
              loss="sparse_categorical_crossentropy",
              metrics=['accuracy']
             )
h=model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=10)

loss,acc=model.evaluate(x_test,y_test)
print(loss)
print(acc)

plt.plot(h.history['loss'],label='train')
plt.plot(h.history['val_loss'],label='val')
plt.title("Training Loss and Accuracy")
plt.xlabel("Epoch #")
plt.ylabel("Loss/Accuracy")
plt.legend()